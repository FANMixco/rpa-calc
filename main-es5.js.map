{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ms-power-automate-per-flow/ms-power-automate-per-flow.component.ts","webpack:///src/app/ms-power-automate-per-flow/ms-power-automate-per-flow.component.html","webpack:///src/app/ms-power-automate-per-users/ms-power-automate-per-users.component.ts","webpack:///src/app/ms-power-automate-per-users/ms-power-automate-per-users.component.html","webpack:///src/app/ms-power-automate/ms-power-automate.component.ts","webpack:///src/app/ms-power-automate/ms-power-automate.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","MsPowerAutomatePerFlowComponent","formBuilder","totalPerMonth","totalPerYear","infoMSPowerAutomate","msPowerFlowsForm","valueChanges","subscribe","val","perFlow","txtExtraFlows","extraFlow","txtFlowNoRPA","perUserPlanWithRPA","txtFlowRPA","rpaAddOn","group","onChanges","MsPowerAutomatePerUsersComponent","totalNoRPA","totalRPA","enableRobots","msPowerUsersForm","txtUserNoRPA","perUserPlan","txtUserRPA","txtRobot","MsPowerAutomateComponent","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'rpa-calc';\n}\n","<h1 style=\"padding-top: 15px;\">RPA Calculator</h1>\n<app-ms-power-automate></app-ms-power-automate>\n<div class=\"footer-copyright text-center py-3\">Â© 2020 Copyright:\n    <a href=\"https://federiconavarrete.com\"> Federico Navarrete</a>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MsPowerAutomateComponent } from './ms-power-automate/ms-power-automate.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MsPowerAutomatePerUsersComponent } from './ms-power-automate-per-users/ms-power-automate-per-users.component';\nimport { MsPowerAutomatePerFlowComponent } from './ms-power-automate-per-flow/ms-power-automate-per-flow.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MsPowerAutomateComponent,\n    MsPowerAutomatePerUsersComponent,\n    MsPowerAutomatePerFlowComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-ms-power-automate-per-flow',\n  templateUrl: './ms-power-automate-per-flow.component.html',\n  styleUrls: ['./ms-power-automate-per-flow.component.css']\n})\nexport class MsPowerAutomatePerFlowComponent implements OnInit {\n  \n  msPowerFlowsForm: FormGroup;\n  totalPerMonth:number = 500;\n  totalPerYear:number = this.totalPerMonth * 12;\n\n  infoMSPowerAutomate = {\n    \"perUserPlan\": 15,\n    \"perUserPlanWithRPA\": 40,\n    \"rpaAddOn\": 150,\n    \"perFlow\": 500,\n    \"aiAddOn\": 500,\n    \"extraFlow\": 100\n  };\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  onChanges(): void {\n    this.msPowerFlowsForm.valueChanges.subscribe(val => {\n      this.totalPerMonth = this.infoMSPowerAutomate.perFlow \n                            + val.txtExtraFlows * this.infoMSPowerAutomate.extraFlow\n                            + val.txtFlowNoRPA * this.infoMSPowerAutomate.perUserPlanWithRPA \n                            + val.txtFlowRPA * this.infoMSPowerAutomate.rpaAddOn;\n\n      this.totalPerYear = this.totalPerMonth * 12;\n    });\n  }\n\n  ngOnInit(): void {\n    this.msPowerFlowsForm = this.formBuilder.group({\n      txtExtraFlows: 0,\n      txtFlowNoRPA: 0,\n      txtFlowRPA: 0\n    });\n\n    this.onChanges();    \n  }\n}\n","<div class=\"container\" style=\"padding-top: 15px;\">\n    <form [formGroup]=\"msPowerFlowsForm\">\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtExtraFlows\"># of Extra Flows</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtExtraFlows\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtFlowNoRPA\"># of Users with Attended RPAs</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtFlowNoRPA\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtFlowRPA\"># of Unattended RPAs (Bots)</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtFlowRPA\" min=\"0\" />\n                </div>\n            </div>\n        </div>\n\n        <h3>Total</h3>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalFlowMonth\">Per month in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"500\" value=\"{{totalPerMonth}}\" readonly />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalFlowYear\">Per month in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalPerYear}}\" readonly />\n                </div>\n            </div>\n        </div>\n\n        <h4>Notes:</h4>\n        <ul>\n            <li>\n                The package includes 5 Flows for unlimited users by default.\n            </li>\n            <li>\n                RPA is the capability to integrate your Flows with other apps (internals apps, for example) not supported by Microsoft.\n                <br />\n                More info about available <a target=\"_blank\" href=\"https://emea.flow.microsoft.com/en-us/connectors/\">connectors</a>.\n            </li>\n            <li>Types:\n                <ul>\n                    <li>Attended RPAs are Flows that interact with the users.</li>\n                    <li>Unattended RPAs (bots) are Flows that work autonomously (by themselves) on the background.</li>\n                </ul>\n            </li>\n            <li>DISCLAIMER. The costs exclude Microsoft 365 prices.</li>\n            <li>Many services require a Microsoft 365 account.</li>\n        </ul>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-ms-power-automate-per-users',\n  templateUrl: './ms-power-automate-per-users.component.html',\n  styleUrls: ['./ms-power-automate-per-users.component.css']\n})\nexport class MsPowerAutomatePerUsersComponent implements OnInit {\n  msPowerUsersForm: FormGroup;\n  totalNoRPA: number = 0;\n  totalRPA: number = 0;\n  totalPerMonth: number = 0;\n  totalPerYear: number = 0;\n  enableRobots: boolean = true;\n\n  infoMSPowerAutomate = {\n    \"perUserPlan\": 15,\n    \"perUserPlanWithRPA\": 40,\n    \"rpaAddOn\": 150,\n    \"perFlow\": 500,\n    \"aiAddOn\": 500,\n    \"extraFlow\": 100\n  };\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  onChanges(): void {\n    this.msPowerUsersForm.valueChanges.subscribe(val => {\n      this.totalNoRPA = val.txtUserNoRPA * this.infoMSPowerAutomate.perUserPlan;\n\n      if (val.txtUserRPA > 0) {\n        this.enableRobots = false;\n      } else {\n        this.enableRobots = true;\n        val.txtRobot = 0;\n      }\n\n      this.totalRPA = val.txtUserRPA * this.infoMSPowerAutomate.perUserPlanWithRPA + val.txtRobot * this.infoMSPowerAutomate.rpaAddOn;\n\n      this.totalPerMonth = this.totalNoRPA + this.totalRPA;\n      this.totalPerYear = this.totalPerMonth * 12;\n    });\n  }\n\n  ngOnInit(): void {\n    this.msPowerUsersForm = this.formBuilder.group({\n      txtUserNoRPA: 0,\n      txtUserRPA: 0,\n      txtRobot: 0\n    });\n\n    this.onChanges();    \n  }\n}\n","<div class=\"container\" style=\"padding-top: 15px;\">\n    <form [formGroup]=\"msPowerUsersForm\">\n        <h3>Per User without RPAs</h3>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtUserNoRPA\"># of Users</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtUserNoRPA\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalNoRPA\">Cost in US$ per month</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalNoRPA}}\" readonly />\n                </div>\n            </div>\n        </div>\n\n        <h3>Per User with RPAs</h3>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtUserRPA\"># of Users</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtUserRPA\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtRobot\"># of Robots</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtRobot\" min=\"0\" [readonly]=\"enableRobots\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n               <div class=\"form-group\">\n                    <label for=\"txtTotalRPA\">Cost in US$ per month</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalRPA}}\" readonly />\n                </div>\n            </div>\n        </div>\n\n        <h3>Total</h3>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalPerMonth\">Per month in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalPerMonth}}\" readonly />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalPerYear\">Per year in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalPerYear}}\" readonly />\n                </div>\n            </div>\n        </div>\n\n        <h4>Notes:</h4>\n        <ul>\n            <li>\n                Every package Include unlimited Flows using Connectors provided by Microsoft.\n            </li>\n            <li>\n                RPA is the capability to integrate your Flows with other apps (internals apps, for example) not supported by Microsoft.\n                <br />\n                More info about available <a target=\"_blank\" href=\"https://emea.flow.microsoft.com/en-us/connectors/\">connectors</a>.\n            </li>\n            <li>Types:\n                <ul>\n                    <li>Attended RPAs are Flows that interact with the users.</li>\n                    <li>Unattended RPAs (bots) are Flows that work autonomously (by themselves) on the background.</li>\n                </ul>\n            </li>\n            <li>DISCLAIMER. The costs exclude Microsoft 365 prices.</li>\n            <li>Many services require a Microsoft 365 account.</li>\n        </ul>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ms-power-automate',\n  templateUrl: './ms-power-automate.component.html',\n  styleUrls: ['./ms-power-automate.component.css']\n})\nexport class MsPowerAutomateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"text-align: center;\">\n    <h2 style=\"padding-bottom: 15px;\">Microsoft Power Automate</h2>\n    <p><b>Last Update:</b> 2020-06-21. <b>Source:</b>&nbsp;<a href=\"https://emea.flow.microsoft.com/en-us/pricing/\" target=\"_blank\">Official</a></p>\n</div>\n<ngb-tabset>\n    <ngb-tab title=\"Per User\">\n        <ng-template ngbTabContent>\n            <app-ms-power-automate-per-users></app-ms-power-automate-per-users>\n        </ng-template>\n    </ngb-tab>\n      \n    <ngb-tab title=\"Per Flow\">\n        <ng-template ngbTabContent>\n            <app-ms-power-automate-per-flow></app-ms-power-automate-per-flow>\n        </ng-template>\n    </ngb-tab>\n</ngb-tabset>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}