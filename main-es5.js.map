{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ms-power-automate-per-flow/ms-power-automate-per-flow.component.ts","webpack:///src/app/ms-power-automate-per-flow/ms-power-automate-per-flow.component.html","webpack:///src/app/ms-power-automate-per-users/ms-power-automate-per-users.component.ts","webpack:///src/app/ms-power-automate-per-users/ms-power-automate-per-users.component.html","webpack:///src/app/ms-power-automate-prices/ms-power-automate-prices.component.ts","webpack:///src/app/ms-power-automate-prices/ms-power-automate-prices.component.html","webpack:///src/app/ms-power-automate/ms-power-automate.component.ts","webpack:///src/app/ms-power-automate/ms-power-automate.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","MsPowerAutomatePerFlowComponent","formBuilder","totalPerMonth","totalPerYear","infoMSPowerAutomate","msPowerFlowsForm","valueChanges","subscribe","val","perFlow","txtExtraFlows","extraFlow","txtFlowNoRPA","perUserPlanWithRPA","txtFlowRPA","rpaAddOn","txtAI","aiAddOn","group","onChanges","MsPowerAutomatePerUsersComponent","totalNoRPA","totalRPA","enableRobots","msPowerUsersForm","txtUserNoRPA","perUserPlan","txtUserRPA","txtRobot","txtAINoRPA","MsPowerAutomatePricesComponent","MsPowerAutomateComponent","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'rpa-calc';\n}\n","<h1 style=\"padding-top: 15px;\">RPA Calculator</h1>\n<app-ms-power-automate></app-ms-power-automate>\n<div class=\"footer-copyright text-center py-3\">© 2020 Copyright:\n    <a href=\"https://federiconavarrete.com\"> Federico Navarrete</a>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MsPowerAutomateComponent } from './ms-power-automate/ms-power-automate.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MsPowerAutomatePerUsersComponent } from './ms-power-automate-per-users/ms-power-automate-per-users.component';\nimport { MsPowerAutomatePerFlowComponent } from './ms-power-automate-per-flow/ms-power-automate-per-flow.component';\nimport { MsPowerAutomatePricesComponent } from './ms-power-automate-prices/ms-power-automate-prices.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MsPowerAutomateComponent,\n    MsPowerAutomatePerUsersComponent,\n    MsPowerAutomatePerFlowComponent,\n    MsPowerAutomatePricesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-ms-power-automate-per-flow',\n  templateUrl: './ms-power-automate-per-flow.component.html',\n  styleUrls: ['./ms-power-automate-per-flow.component.css']\n})\nexport class MsPowerAutomatePerFlowComponent implements OnInit {\n  \n  msPowerFlowsForm: FormGroup;\n  totalPerMonth:number = 500;\n  totalPerYear:number = this.totalPerMonth * 12;\n\n  infoMSPowerAutomate = {\n    \"perUserPlan\": 15,\n    \"perUserPlanWithRPA\": 40,\n    \"rpaAddOn\": 150,\n    \"perFlow\": 500,\n    \"aiAddOn\": 500,\n    \"extraFlow\": 100\n  };\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  onChanges(): void {\n    this.msPowerFlowsForm.valueChanges.subscribe(val => {\n      this.totalPerMonth = this.infoMSPowerAutomate.perFlow \n                            + val.txtExtraFlows * this.infoMSPowerAutomate.extraFlow\n                            + val.txtFlowNoRPA * this.infoMSPowerAutomate.perUserPlanWithRPA \n                            + val.txtFlowRPA * this.infoMSPowerAutomate.rpaAddOn\n                            + val.txtAI * this.infoMSPowerAutomate.aiAddOn;\n\n      this.totalPerYear = this.totalPerMonth * 12;\n    });\n  }\n\n  ngOnInit(): void {\n    this.msPowerFlowsForm = this.formBuilder.group({\n      txtExtraFlows: 0,\n      txtFlowNoRPA: 0,\n      txtFlowRPA: 0,\n      txtAI: 0\n    });\n\n    this.onChanges();    \n  }\n}\n","<div class=\"container\" style=\"padding-top: 15px;\">\n    <form [formGroup]=\"msPowerFlowsForm\">\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtExtraFlows\"># of Extra Flows</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtExtraFlows\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtFlowNoRPA\"># of Users with <b>Attended RPAs</b></label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtFlowNoRPA\" min=\"0\" />\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtFlowRPA\"># of <b>Unattended RPAs (Bots)</b></label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtFlowRPA\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtAI\"># of AI <b>Units</b></label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtAI\" min=\"0\" />\n                </div>\n            </div>\n        </div>\n\n        <h3>Total</h3>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalFlowMonth\">Per Month in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"500\" value=\"{{totalPerMonth}}\" readonly />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalFlowYear\">Per Month in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalPerYear}}\" readonly />\n                </div>\n            </div>\n        </div>\n\n        <h4>Notes:</h4>\n        <ul>\n            <li>DISCLAIMER. The costs exclude Microsoft 365 prices.</li>\n            <li>Many services require a Microsoft 365 account for <b>Business or School.</b></li>\n            <li>\n                The package includes 5 Flows for unlimited users by default.\n            </li>\n            <li>\n                RPA is the capability to integrate your Flows with other apps (internals apps, for example) not supported by Microsoft.\n                <br />\n                More info about available <a target=\"_blank\" href=\"https://emea.flow.microsoft.com/en-us/connectors/\">connectors</a>.\n            </li>\n            <li>Types:\n                <ul>\n                    <li><b>Attended RPAs</b> are Flows that interact with the users.</li>\n                    <li><b>Unattended RPAs (bots)</b> are Flows that work autonomously (by themselves) on the background.</li>\n                </ul>\n            </li>\n            <li><b>Units</b> represent specific actions for example, Business card reader, Form processing, Key phrase extraction, Language detection, Object detection, Prediction, Sentiment analysis, and Text recognition.\n                <br />You can get more information about them <a href=\"https://powerapps.microsoft.com/en-us/ai-builder-calculator/\">here.</a>\n            </li>\n        </ul>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-ms-power-automate-per-users',\n  templateUrl: './ms-power-automate-per-users.component.html',\n  styleUrls: ['./ms-power-automate-per-users.component.css']\n})\nexport class MsPowerAutomatePerUsersComponent implements OnInit {\n  msPowerUsersForm: FormGroup;\n  totalNoRPA: number = 0;\n  totalRPA: number = 0;\n  totalPerMonth: number = 0;\n  totalPerYear: number = 0;\n  enableRobots: boolean = true;\n\n  infoMSPowerAutomate = {\n    \"perUserPlan\": 15,\n    \"perUserPlanWithRPA\": 40,\n    \"rpaAddOn\": 150,\n    \"perFlow\": 500,\n    \"aiAddOn\": 500,\n    \"extraFlow\": 100\n  };\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  onChanges(): void {\n    this.msPowerUsersForm.valueChanges.subscribe(val => {\n      this.totalNoRPA = val.txtUserNoRPA * this.infoMSPowerAutomate.perUserPlan;\n\n      if (val.txtUserRPA > 0) {\n        this.enableRobots = false;\n      } else {\n        this.enableRobots = true;\n        val.txtRobot = 0;\n      }\n\n      this.totalRPA = val.txtUserRPA * this.infoMSPowerAutomate.perUserPlanWithRPA\n                      + val.txtAINoRPA * this.infoMSPowerAutomate.aiAddOn\n                      + val.txtRobot * this.infoMSPowerAutomate.rpaAddOn\n                      + val.txtAI * this.infoMSPowerAutomate.aiAddOn;\n\n      this.totalPerMonth = this.totalNoRPA + this.totalRPA;\n      this.totalPerYear = this.totalPerMonth * 12;\n    });\n  }\n\n  ngOnInit(): void {\n    this.msPowerUsersForm = this.formBuilder.group({\n      txtUserNoRPA: 0,\n      txtUserRPA: 0,\n      txtRobot: 0,\n      txtAI: 0,\n      txtAINoRPA: 0\n    });\n\n    this.onChanges();    \n  }\n}\n","<div class=\"container\" style=\"padding-top: 15px;\">\n    <form [formGroup]=\"msPowerUsersForm\">\n        <h3>Per User with Flows Only</h3>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtUserNoRPA\"># of Users</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtUserNoRPA\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtAINoRPA\"># of AI <b>Units</b></label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtAINoRPA\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalNoRPA\">Cost per Month in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalNoRPA}}\" readonly />\n                </div>\n            </div>\n        </div>\n\n        <h3>Per User with Flows + RPA Capabilities</h3>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtUserRPA\"># of Users</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtUserRPA\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtRobot\"># of <b>Unattended</b> Bots</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtRobot\" min=\"0\" [readonly]=\"enableRobots\" />\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtAI\"># of AI <b>Units</b></label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtAI\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n               <div class=\"form-group\">\n                    <label for=\"txtTotalRPA\">Cost per Month in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalRPA}}\" readonly />\n                </div>\n            </div>\n        </div>\n\n        <h3>Total</h3>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalPerMonth\">Per Month in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalPerMonth}}\" readonly />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalPerYear\">Per Year in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalPerYear}}\" readonly />\n                </div>\n            </div>\n        </div>\n\n        <h4>Notes:</h4>\n        <ul>\n            <li>DISCLAIMER. The costs exclude Microsoft 365 prices.</li>\n            <li>Many services require a Microsoft 365 account for <b>Business or School.</b></li>\n            <li>\n                Every package Include unlimited Flows using Connectors provided by Microsoft.\n            </li>\n            <li>\n                RPA is the capability to integrate your Flows with other apps (internals apps, for example) not supported by Microsoft.\n                <br />\n                More info about available <a target=\"_blank\" href=\"https://emea.flow.microsoft.com/en-us/connectors/\">connectors</a>.\n            </li>\n            <li>Types:\n                <ul>\n                    <li><b>Attended RPAs</b> are Flows that interact with the users.</li>\n                    <li><b>Unattended RPAs (bots)</b> are Flows that work autonomously (by themselves) on the background.</li>\n                </ul>\n            </li>\n            <li><b>Units</b> represent specific actions for example, Business card reader, Form processing, Key phrase extraction, Language detection, Object detection, Prediction, Sentiment analysis, and Text recognition.\n                <br />You can get more information about them <a href=\"https://powerapps.microsoft.com/en-us/ai-builder-calculator/\">here.</a>\n            </li>\n        </ul>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ms-power-automate-prices',\n  templateUrl: './ms-power-automate-prices.component.html',\n  styleUrls: ['./ms-power-automate-prices.component.css']\n})\nexport class MsPowerAutomatePricesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\" style=\"padding-top: 15px;\">\n    <table class=\"table\">\n        <tr>\n            <th>Plan</th>\n            <th>Price (US$) per Month</th>\n        </tr>\n        <tr>\n            <td>Per User Plan</td>\n            <td>15.00</td>\n        </tr>\n        <tr>\n            <td>Per User plan with Attended RPA</td>\n            <td>40.00</td>\n        </tr>\n        <tr>\n            <td>Per Flow Plan</td>\n            <td>500.00</td>\n        </tr>\n        <tr>\n            <td>Extra Flow</td>\n            <td>500.00</td>\n        </tr>\n        <tr>\n            <td>Unattended RPA add-on</td>\n            <td>150.00</td>\n        </tr>\n        <tr>\n            <td>AI Builder per <b>Unit</b></td>\n            <td>500.00</td>\n        </tr>\n    </table>\n    <h4>Notes:</h4>\n        <ul>\n            <li>DISCLAIMER. The costs exclude Microsoft 365 prices.</li>\n            <li>Many services require a Microsoft 365 account for <b>Business or School.</b></li>\n            <li>\n                RPA is the capability to integrate your Flows with other apps (internals apps, for example) not supported by Microsoft.\n                <br />\n                More info about available <a target=\"_blank\" href=\"https://emea.flow.microsoft.com/en-us/connectors/\">connectors</a>.\n            </li>\n            <li>Types:\n                <ul>\n                    <li><b>Attended RPAs</b> are Flows that interact with the users.</li>\n                    <li><b>Unattended RPAs (bots)</b> are Flows that work autonomously (by themselves) on the background.</li>\n                </ul>\n            </li>\n            <li><b>Units</b> represent specific actions for example, Business card reader, Form processing, Key phrase extraction, Language detection, Object detection, Prediction, Sentiment analysis, and Text recognition.\n                <br />You can get more information about them <a href=\"https://powerapps.microsoft.com/en-us/ai-builder-calculator/\">here.</a>\n            </li>\n        </ul>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ms-power-automate',\n  templateUrl: './ms-power-automate.component.html',\n  styleUrls: ['./ms-power-automate.component.css']\n})\nexport class MsPowerAutomateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"text-align: center;\">\n    <h2 style=\"padding-bottom: 15px;\">Microsoft Power Automate</h2>\n    <p><b>Last Update:</b> 2020-06-21. <b>Source:</b>&nbsp;<a href=\"https://emea.flow.microsoft.com/en-us/pricing/\" target=\"_blank\">Official</a></p>\n</div>\n<ngb-tabset>\n    <ngb-tab title=\"Per User\">\n        <ng-template ngbTabContent>\n            <app-ms-power-automate-per-users></app-ms-power-automate-per-users>\n        </ng-template>\n    </ngb-tab>\n      \n    <ngb-tab title=\"Per Flow\">\n        <ng-template ngbTabContent>\n            <app-ms-power-automate-per-flow></app-ms-power-automate-per-flow>\n        </ng-template>\n    </ngb-tab>\n\n    <ngb-tab title=\"Pricing\">\n        <ng-template ngbTabContent>\n            <app-ms-power-automate-prices></app-ms-power-automate-prices>\n        </ng-template>\n    </ngb-tab>\n</ngb-tabset>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}