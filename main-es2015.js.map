{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/ms-power-automate-per-flow/ms-power-automate-per-flow.component.ts","./src/app/ms-power-automate-per-flow/ms-power-automate-per-flow.component.html","./src/app/ms-power-automate-per-users/ms-power-automate-per-users.component.ts","./src/app/ms-power-automate-per-users/ms-power-automate-per-users.component.html","./src/app/ms-power-automate-prices/ms-power-automate-prices.component.ts","./src/app/ms-power-automate-prices/ms-power-automate-prices.component.html","./src/app/ms-power-automate/ms-power-automate.component.ts","./src/app/ms-power-automate/ms-power-automate.component.html","./src/app/uipath-payment/uipath-payment.component.ts","./src/app/uipath-payment/uipath-payment.component.html","./src/app/uipath-pricing/uipath-pricing.component.ts","./src/app/uipath-pricing/uipath-pricing.component.html","./src/app/uipath/uipath.component.ts","./src/app/uipath/uipath.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MsPowerAutomateComponent } from './ms-power-automate/ms-power-automate.component';\nimport { UipathComponent } from './uipath/uipath.component';\n\nconst routes: Routes = [\n  { path: 'ms-power-automate', component: MsPowerAutomateComponent },\n  { path: 'uipath', component: UipathComponent },\n  { path: '**', component: MsPowerAutomateComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'rpa-calc';\n  router: string;\n\n  constructor(private _router: Router){\n    this.router = _router.url;\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" href=\"/ms-power-automate\">RPA Calculator</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/ms-power-automate\">Microsoft Power Automate</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"/uipath\">UiPath</a>\n          </li>\n        </ul>\n    </div>\n</nav>\n<app-ms-power-automate *ngIf=\"router == '/ms-power-automate'\"></app-ms-power-automate>\n<app-uipath *ngIf=\"router == '/uipath'\"></app-uipath>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MsPowerAutomateComponent } from './ms-power-automate/ms-power-automate.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MsPowerAutomatePerUsersComponent } from './ms-power-automate-per-users/ms-power-automate-per-users.component';\nimport { MsPowerAutomatePerFlowComponent } from './ms-power-automate-per-flow/ms-power-automate-per-flow.component';\nimport { MsPowerAutomatePricesComponent } from './ms-power-automate-prices/ms-power-automate-prices.component';\nimport { UipathComponent } from './uipath/uipath.component';\nimport { UipathPricingComponent } from './uipath-pricing/uipath-pricing.component';\nimport { UipathPaymentComponent } from './uipath-payment/uipath-payment.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MsPowerAutomateComponent,\n    MsPowerAutomatePerUsersComponent,\n    MsPowerAutomatePerFlowComponent,\n    MsPowerAutomatePricesComponent,\n    UipathComponent,\n    UipathPricingComponent,\n    UipathPaymentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-ms-power-automate-per-flow',\n  templateUrl: './ms-power-automate-per-flow.component.html',\n  styleUrls: ['./ms-power-automate-per-flow.component.css']\n})\nexport class MsPowerAutomatePerFlowComponent implements OnInit {\n  \n  msPowerFlowsForm: FormGroup;\n  totalPerMonth:number = 500;\n  totalPerYear:number = this.totalPerMonth * 12;\n\n  infoMSPowerAutomate = {\n    \"perUserPlan\": 15,\n    \"perUserPlanWithRPA\": 40,\n    \"rpaAddOn\": 150,\n    \"perFlow\": 500,\n    \"aiAddOn\": 500,\n    \"extraFlow\": 100\n  };\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  onChanges(): void {\n    this.msPowerFlowsForm.valueChanges.subscribe(val => {\n      this.totalPerMonth = this.infoMSPowerAutomate.perFlow \n                            + val.txtExtraFlows * this.infoMSPowerAutomate.extraFlow\n                            + val.txtFlowNoRPA * this.infoMSPowerAutomate.perUserPlanWithRPA \n                            + val.txtFlowRPA * this.infoMSPowerAutomate.rpaAddOn\n                            + val.txtAI * this.infoMSPowerAutomate.aiAddOn;\n\n      this.totalPerYear = this.totalPerMonth * 12;\n    });\n  }\n\n  ngOnInit(): void {\n    this.msPowerFlowsForm = this.formBuilder.group({\n      txtExtraFlows: 0,\n      txtFlowNoRPA: 0,\n      txtFlowRPA: 0,\n      txtAI: 0\n    });\n\n    this.onChanges();\n  }\n}\n","<div class=\"container\" style=\"padding-top: 15px;\">\n    <form [formGroup]=\"msPowerFlowsForm\">\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtExtraFlows\"># of Extra Flows</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtExtraFlows\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtFlowNoRPA\"># of Users with <b>Attended RPAs</b></label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtFlowNoRPA\" min=\"0\" />\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtFlowRPA\"># of <b>Unattended RPAs (Bots)</b></label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtFlowRPA\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtAI\"># of AI <b>Units</b></label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtAI\" min=\"0\" />\n                </div>\n            </div>\n        </div>\n\n        <h3>Total</h3>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalFlowMonth\">Per Month in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"500\" value=\"{{totalPerMonth}}\" readonly />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalFlowYear\">Per Month in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalPerYear}}\" readonly />\n                </div>\n            </div>\n        </div>\n\n        <h4>Notes:</h4>\n        <ul>\n            <li>DISCLAIMER. The costs exclude Microsoft 365 prices.</li>\n            <li>Many services require a Microsoft 365 account for <b>Business or School.</b></li>\n            <li>\n                The package includes 5 Flows for <i>Unlimited Users</i> by default.\n            </li>\n            <li>\n                RPA is the capability to integrate your Flows with other apps (internals apps, for example) not supported by Microsoft.\n                <br />\n                More info about available <a target=\"_blank\" href=\"https://emea.flow.microsoft.com/en-us/connectors/\">connectors</a>.\n            </li>\n            <li>Types:\n                <ul>\n                    <li><b>Attended RPAs</b> are Flows that interact with the users.</li>\n                    <li><b>Unattended RPAs (bots)</b> are Flows that work autonomously (by themselves) on the background.</li>\n                </ul>\n            </li>\n            <li><b>Units</b> represent specific actions for example, Business card reader, Form processing, Key phrase extraction, Language detection, Object detection, Prediction, Sentiment analysis, and Text recognition.\n                <br />You can get more information about them <a href=\"https://powerapps.microsoft.com/en-us/ai-builder-calculator/\">here.</a>\n            </li>\n        </ul>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-ms-power-automate-per-users',\n  templateUrl: './ms-power-automate-per-users.component.html',\n  styleUrls: ['./ms-power-automate-per-users.component.css']\n})\nexport class MsPowerAutomatePerUsersComponent implements OnInit {\n  msPowerUsersForm: FormGroup;\n  totalNoRPA: number = 0;\n  totalRPA: number = 0;\n  totalPerMonth: number = 0;\n  totalPerYear: number = 0;\n  enableRobots: boolean = true;\n\n  infoMSPowerAutomate = {\n    \"perUserPlan\": 15,\n    \"perUserPlanWithRPA\": 40,\n    \"rpaAddOn\": 150,\n    \"perFlow\": 500,\n    \"aiAddOn\": 500,\n    \"extraFlow\": 100\n  };\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  onChanges(): void {\n    this.msPowerUsersForm.valueChanges.subscribe(val => {\n      this.totalNoRPA = val.txtUserNoRPA * this.infoMSPowerAutomate.perUserPlan;\n\n      if (val.txtUserRPA > 0) {\n        this.enableRobots = false;\n      } else {\n        this.enableRobots = true;\n        val.txtRobot = 0;\n      }\n\n      this.totalRPA = val.txtUserRPA * this.infoMSPowerAutomate.perUserPlanWithRPA\n                      + val.txtAINoRPA * this.infoMSPowerAutomate.aiAddOn\n                      + val.txtRobot * this.infoMSPowerAutomate.rpaAddOn\n                      + val.txtAI * this.infoMSPowerAutomate.aiAddOn;\n\n      this.totalPerMonth = this.totalNoRPA + this.totalRPA;\n      this.totalPerYear = this.totalPerMonth * 12;\n    });\n  }\n\n  ngOnInit(): void {\n    this.msPowerUsersForm = this.formBuilder.group({\n      txtUserNoRPA: 0,\n      txtUserRPA: 0,\n      txtRobot: 0,\n      txtAI: 0,\n      txtAINoRPA: 0\n    });\n\n    this.onChanges();    \n  }\n}\n","<div class=\"container\" style=\"padding-top: 15px;\">\n    <form [formGroup]=\"msPowerUsersForm\">\n        <h3>With Flows Only</h3>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtUserNoRPA\"># of Users</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtUserNoRPA\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtAINoRPA\"># of AI <b>Units</b></label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtAINoRPA\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalNoRPA\">Cost per Month in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalNoRPA}}\" readonly />\n                </div>\n            </div>\n        </div>\n\n        <h3>With Flows + RPA Capabilities</h3>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtUserRPA\"># of Users</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtUserRPA\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtRobot\"># of <b>Unattended</b> Bots</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtRobot\" min=\"0\" [readonly]=\"enableRobots\" />\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtAI\"># of AI <b>Units</b></label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"txtAI\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n               <div class=\"form-group\">\n                    <label for=\"txtTotalRPA\">Cost per Month in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalRPA}}\" readonly />\n                </div>\n            </div>\n        </div>\n\n        <h3>Total</h3>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalPerMonth\">Per Month in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalPerMonth}}\" readonly />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalPerYear\">Per Year in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalPerYear}}\" readonly />\n                </div>\n            </div>\n        </div>\n\n        <h4>Notes:</h4>\n        <ul>\n            <li>DISCLAIMER. The costs exclude Microsoft 365 prices.</li>\n            <li>Many services require a Microsoft 365 account for <b>Business or School.</b></li>\n            <li>\n                Every package includes <i>Unlimited Flows</i> using <a target=\"_blank\" href=\"https://emea.flow.microsoft.com/en-us/connectors/\">connectors</a> provided by Microsoft.\n            </li>\n            <li>\n                RPA is the capability to integrate your Flows with other apps (internals apps, for example) not supported by Microsoft.\n            </li>\n            <li>Types:\n                <ul>\n                    <li><b>Attended RPAs</b> are Flows that interact with the users.</li>\n                    <li><b>Unattended RPAs (bots)</b> are Flows that work autonomously (by themselves) on the background.</li>\n                </ul>\n            </li>\n            <li><b>Units</b> represent specific actions for example, Business card reader, Form processing, Key phrase extraction, Language detection, Object detection, Prediction, Sentiment analysis, and Text recognition.\n                <br />You can get more information about them <a href=\"https://powerapps.microsoft.com/en-us/ai-builder-calculator/\">here.</a>\n            </li>\n        </ul>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ms-power-automate-prices',\n  templateUrl: './ms-power-automate-prices.component.html',\n  styleUrls: ['./ms-power-automate-prices.component.css']\n})\nexport class MsPowerAutomatePricesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\" style=\"padding-top: 15px;\">\n    <table class=\"table\">\n        <tr>\n            <th>Plan</th>\n            <th>Price (US$) per Month</th>\n        </tr>\n        <tr>\n            <td>Per User Plan</td>\n            <td>15.00</td>\n        </tr>\n        <tr>\n            <td>Per User plan with Attended RPA</td>\n            <td>40.00</td>\n        </tr>\n        <tr>\n            <td>Per Flow Plan</td>\n            <td>500.00</td>\n        </tr>\n        <tr>\n            <td>Extra Flow</td>\n            <td>500.00</td>\n        </tr>\n        <tr>\n            <td>Unattended RPA add-on</td>\n            <td>150.00</td>\n        </tr>\n        <tr>\n            <td>AI Builder per <b>Unit</b></td>\n            <td>500.00</td>\n        </tr>\n    </table>\n    <h4>Notes:</h4>\n        <ul>\n            <li>DISCLAIMER. The costs exclude Microsoft 365 prices.</li>\n            <li>Many services require a Microsoft 365 account for <b>Business or School.</b></li>\n            <li>\n                RPA is the capability to integrate your Flows with other apps (internals apps, for example) not supported by Microsoft.\n                <br />\n                More info about available <a target=\"_blank\" href=\"https://emea.flow.microsoft.com/en-us/connectors/\">connectors</a>.\n            </li>\n            <li>Types:\n                <ul>\n                    <li><b>Attended RPAs</b> are Flows that interact with the users.</li>\n                    <li><b>Unattended RPAs (bots)</b> are Flows that work autonomously (by themselves) on the background.</li>\n                </ul>\n            </li>\n            <li><b>Units</b> represent specific actions for example, Business card reader, Form processing, Key phrase extraction, Language detection, Object detection, Prediction, Sentiment analysis, and Text recognition.\n                <br />You can get more information about them <a href=\"https://powerapps.microsoft.com/en-us/ai-builder-calculator/\">here.</a>\n            </li>\n        </ul>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ms-power-automate',\n  templateUrl: './ms-power-automate.component.html',\n  styleUrls: ['./ms-power-automate.component.css']\n})\nexport class MsPowerAutomateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"text-align: center;\">\n    <h2 style=\"padding-bottom: 15px;\">Microsoft Power Automate</h2>\n    <p><b>Last Update:</b> 2020-06-21. <b>Source:</b>&nbsp;<a href=\"https://emea.flow.microsoft.com/en-us/pricing/\" target=\"_blank\">Official</a></p>\n</div>\n<ngb-tabset>\n    <ngb-tab title=\"Per User\">\n        <ng-template ngbTabContent>\n            <app-ms-power-automate-per-users></app-ms-power-automate-per-users>\n        </ng-template>\n    </ngb-tab>\n      \n    <ngb-tab title=\"Per Flow\">\n        <ng-template ngbTabContent>\n            <app-ms-power-automate-per-flow></app-ms-power-automate-per-flow>\n        </ng-template>\n    </ngb-tab>\n\n    <ngb-tab title=\"Pricing\">\n        <ng-template ngbTabContent>\n            <app-ms-power-automate-prices></app-ms-power-automate-prices>\n        </ng-template>\n    </ngb-tab>\n</ngb-tabset>\n<div class=\"footer-copyright text-center py-3\">© 2020 Copyright:\n    <a href=\"https://federiconavarrete.com\"> Federico Navarrete</a>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-uipath-payment',\n  templateUrl: './uipath-payment.component.html',\n  styleUrls: ['./uipath-payment.component.css']\n})\nexport class UipathPaymentComponent implements OnInit {\n\n  infoMSPowerAutomate = {\n    \"studio\": 2500,\n    \"orchestrator\": 20000,\n    \"attended\": 1500,\n    \"unattended\": 8000\n  };\n\n  uiLocation: Array<Object>;\n\n  uiPathForm: FormGroup;\n  onPremises: boolean = true;\n  totalPerMonth:number = this.priceRounding(this.infoMSPowerAutomate.orchestrator / 12);\n  totalPerYear:number = this.infoMSPowerAutomate.orchestrator;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  priceRounding(price:number) {\n    return Math.round((price + Number.EPSILON) * 100) / 100;\n  }\n\n  ngOnInit(): void {\n    this.uiPathForm = this.formBuilder.group({\n      noAttended: 0,\n      noUnattended: 0,\n      withStudio: true,\n      uiLocation: 0\n    });\n\n    this.onChanges();\n\n    this.uiLocation = \n    [\n      {\n        value: 0,\n        name: \"On-premises\",\n        selected: \"selected\"\n      },\n      {\n        value: 1,\n        name: \"Cloud\",\n        selected: \"\"\n      }\n    ];\n\n    this.uiPathForm.controls['uiLocation'].setValue(0, {onlySelf: true});\n  }\n\n  onChanges(): void {\n    this.uiPathForm.valueChanges.subscribe(val => {\n\n      let studioPrice = val.withStudio ? this.infoMSPowerAutomate.studio : 0;\n\n      this.totalPerYear = this.infoMSPowerAutomate.orchestrator\n                          + val.noAttended * this.infoMSPowerAutomate.attended\n                          + val.noUnattended * this.infoMSPowerAutomate.unattended\n                          + studioPrice;\n\n      this.totalPerMonth = this.priceRounding(this.totalPerYear / 12);\n    });\n  }\n}\n","<div class=\"container\" style=\"padding-top: 15px;\">\n    <form [formGroup]=\"uiPathForm\">\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"cmbUnits\" translate>Location</label>\n                    <select class=\"form-control\" formControlName=\"uiLocation\" disabled>\n                        <option *ngFor=\"let option of uiLocation\" [value]=\"option.value\">{{option.name}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-check\">\n                    <input type=\"checkbox\" class=\"form-check-input\" formControlName=\"withStudio\" />\n                    <label class=\"form-check-label\" for=\"withStudio\">With UiPath Studio</label>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"noAttended\"># of Attended Bots</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"noAttended\" min=\"0\" />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"noUnattended\"># of Unattended Bots</label>\n                    <input type=\"number\" class=\"form-control\" placeholder=\"Total\" formControlName=\"noUnattended\" min=\"0\" />\n                </div>\n            </div>\n        </div>\n        <h3>Total</h3>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalPerMonth\">Per Month in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalPerMonth}}\" readonly />\n                </div>\n            </div>\n            <div class=\"col-sm\">\n                <div class=\"form-group\">\n                    <label for=\"txtTotalPerYear\">Per Year in US$</label>\n                    <input class=\"form-control\" placeholder=\"Total\" value=\"{{totalPerYear}}\" readonly />\n                </div>\n            </div>\n        </div>\n\n        <h4>Notes:</h4>\n        <ul>\n            <li>Disclaimer. The prices are averages based on <i>UiVision</i> information.</li>\n            <li>Types:\n                <ul>\n                    <li><b>Attended Robot</b> interacts with the users.</li>\n                    <li><b>Unattended Robot</b> works autonomously (by themselves) on the background.</li>\n                </ul>\n            </li>\n        </ul>\n    </form>\n</div>\n\n<div class=\"footer-copyright text-center py-3\">© 2020 Copyright:\n    <a href=\"https://federiconavarrete.com\"> Federico Navarrete</a>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-uipath-pricing',\n  templateUrl: './uipath-pricing.component.html',\n  styleUrls: ['./uipath-pricing.component.css']\n})\nexport class UipathPricingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\" style=\"padding-top: 15px;\">\n    <table class=\"table\">\n        <tr>\n            <th>Product</th>\n            <th>Price (US$) per Year</th>\n        </tr>\n        <tr>\n            <td>UiPath Studio</td>\n            <td>2000.00 - 3000.00</td>\n        </tr>\n        <tr>\n            <td>Orchestrator (On-premises)</td>\n            <td>20000.00</td>\n        </tr>\n        <tr>\n            <td>Attended Robot</td>\n            <td>1200.00 - 1800.00</td>\n        </tr>\n        <tr>\n            <td>Unattended Robot</td>\n            <td>8000.00</td>\n        </tr>\n    </table>\n\n    <h4>Notes:</h4>\n    <ul>\n        <li>Disclaimer. The prices comes from <i>UiVision</i>.</li>\n        <li>Types:\n            <ul>\n                <li><b>Attended Robot</b> interacts with the users.</li>\n                <li><b>Unattended Robot</b> works autonomously (by themselves) on the background.</li>\n            </ul>\n        </li>\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-uipath',\n  templateUrl: './uipath.component.html',\n  styleUrls: ['./uipath.component.css']\n})\nexport class UipathComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"text-align: center;\">\n    <h2 style=\"padding-bottom: 15px;\">UiPath</h2>\n    <p><b>Last Update:</b> 2020-06-22. <b>Source:</b>&nbsp;<a href=\"https://ui.vision/blog/uipath-pricing/\" target=\"_blank\">Unofficial</a></p>\n</div>\n<ngb-tabset>\n    <ngb-tab title=\"Payment\">\n        <ng-template ngbTabContent>\n            <app-uipath-payment></app-uipath-payment>\n        </ng-template>\n    </ngb-tab>\n\n    <ngb-tab title=\"Pricing\">\n        <ng-template ngbTabContent>\n            <app-uipath-pricing></app-uipath-pricing>\n        </ng-template>\n    </ngb-tab>\n</ngb-tabset>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}